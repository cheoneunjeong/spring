<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis-3-mapper.dtd">
<mapper namespace="com.example.spring.mapper.UserMapper">

	<insert id="createUser" parameterType="User">
		INSERT INTO	lc_user1 (
		 u_id,
         u_password,
         u_name,
         u_isAccountNonExpired,
         u_isAccountNonLocked,
         u_isCredentialNonExpired,
         u_isEnabled
      ) VALUES (
         #{username},
         #{password},
         #{uName},
         #{isAccountNonExpired},
         #{isAccountNonLocked},
         #{isCredentialsNonExpired},
         #{isEnabled}
      )
	</insert>
	
	<insert id="createAuthority" parameterType="org.springframework.security.core.GrantedAuthority">
		INSERT INTO lc_auth (
			u_id,
			u_auth
		) VALUES
			<foreach item="authority" index="index" collection="authorities" separator=",">
				(#{username}, #{authority.role})
			</foreach>
			ON DUPLICATE KEY
			UPDATE
				u_id = #{username}
	</insert>
	
	<!-- 권한읽기 -->
	<select id="readAuthorities" parameterType="String" resultType="org.springframework.security.core.authority.SimpleGrantedAuthority">
		SELECT		u_auth
		FROM		lc_auth
		WHERE		1=1
		AND			u_id = #{username}
	</select>
	
<!-- 회원불러오기 -->
	<select id="readUser" parameterType="String" resultType="User">
		SELECT         u_id                 						    as   username,
			                 u_password             					as password,
			                 u_name                						as   uName,
			                 u_isAccountNonExpired        as isAccountNonExpired,
			                 u_isAccountNonLocked    	    as isAccountNonLocked,
			                 u_isCredentialNonExpired    as isCredentialsNonExpired,
			                 u_isEnabled          				    as isEnabled
      FROM         lc_user1
      WHERE         1=1
      AND            u_id   =   #{username}
	</select>
	
	<select id="getuserlist" parameterType="Integer" resultType="User">
		SELECT     @ROWNUM := @ROWNUM -1 AS ROWNUM,
        		 	 u_id                 						    as   username,
			   		 u_password             					as password,
	                 u_name                						as   uName,
	                 u_isAccountNonExpired        as isAccountNonExpired,
	                 u_isAccountNonLocked    	    as isAccountNonLocked,
	                 u_isCredentialNonExpired    as isCredentialsNonExpired,
	                 u_isEnabled          				    as isEnabled
		FROM       lc_user1 ta, 
           (SELECT @rownum := (SELECT COUNT(*)-#{page}+1 FROM lc_user1 ta)) tb
		ORDER BY 	ROWNUM asc
		LIMIT      #{page}, 3
	</select>
	
	<select id="getuserCount" resultType="Integer">
		SELECT COUNT(*) count FROM lc_user1
	</select>
	
	<select id="getAuth" resultType="org.springframework.security.core.authority.SimpleGrantedAuthority">
		SELECT		u_auth
		FROM		lc_auth
		WHERE		1=1
		AND			u_id = #{username}
	</select>
	
	<select id="getUser" parameterType="String" resultType="User">
		SELECT
        		 	 u_id                 						    as   username,
			   		 u_password             					as password,
	                 u_name                						as   uName,
	                 u_isAccountNonExpired        as isAccountNonExpired,
	                 u_isAccountNonLocked    	    as isAccountNonLocked,
	                 u_isCredentialNonExpired    as isCredentialsNonExpired,
	                 u_isEnabled          				    as isEnabled
		FROM       lc_user1
		WHERE		u_id = #{id}
	</select>
		
</mapper>